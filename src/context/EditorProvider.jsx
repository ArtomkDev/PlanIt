import React, { createContext, useContext, useState, useCallback } from "react";

const EditorContext = createContext(null);

export const EditorProvider = ({ children }) => {
  const [isEditing, setIsEditing] = useState(false);

  // üîπ –¢–£–¢ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å—ñ –∫–æ–ª—å–æ—Ä–∏, –≥—Ä–∞–¥—ñ—î–Ω—Ç–∏ —ñ —Ç.–ø.
  const [scheduleDraft, setScheduleDraft] = useState({
    gradients: [], // —Ç—É—Ç –º–∞—Å–∏–≤ –≥—Ä–∞–¥—ñ—î–Ω—Ç—ñ–≤
    colors: [],    // –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏, —è–∫—â–æ —Ç—Ä–µ–±–∞
  });

  const toggleEditing = useCallback(() => {
    setIsEditing((prev) => !prev);
  }, []);

  const value = {
    isEditing,
    toggleEditing,

    // üëá —Ç–µ–ø–µ—Ä —Ü—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ñ
    scheduleDraft,
    setScheduleDraft,
  };

  return (
    <EditorContext.Provider value={value}>
      {children}
    </EditorContext.Provider>
  );
};

export const useEditor = () => {
  const ctx = useContext(EditorContext);
  if (!ctx) throw new Error("useEditor must be used within EditorProvider");
  return ctx;
};
 